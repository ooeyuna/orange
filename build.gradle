buildscript {
    ext.kotlin_version = "1.0.2"

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'

    }
}

allprojects {
    apply plugin: 'idea'
}

subprojects {

    group 'ooeyuna.rika'
    version '0.1'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
        maven { url "https://jitpack.io" }
        maven {
            url "http://dl.bintray.com/ooeyuna/rika"
        }

    }

    apply plugin: 'kotlin'

    dependencies {
        testCompile(
                "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
                "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
                'junit:junit:4.12'
        )
    }

}

project(":orange-core") {
    dependencies {
        compile(
                "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
                "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
                'com.google.guava:guava:19.0',

                "ch.qos.logback:logback-classic:1.1.7",

                'com.fasterxml.jackson.core:jackson-databind:2.7.1-1',
                'com.fasterxml.jackson.module:jackson-module-kotlin:2.7.1-2',
                'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.1',
                'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1',
                'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.0',

                'com.github.kittinunf.fuel:fuel:1.3.1', //for JVM
                'com.github.kittinunf.fuel:fuel-rxjava:1.3.1', //for RxJava support

                'org.apache.kafka:kafka-clients:0.10.0.0'
        )
    }
}

project(':orange-db') {
    dependencies {
        compile(
                project(":orange-core"),
                "org.jetbrains.exposed:exposed:0.5.0",
                "mysql:mysql-connector-java:5.1.39",
                "org.flywaydb:flyway-core:4.0.2",
                "com.alibaba:druid:1.0.23"
        )
    }
}

project(':orange-web') {
    dependencies {
        compile(
                project(":orange-core"),
                "com.sparkjava:spark-core:2.5"
        )
    }

}

project(':orange-quartz') {
    dependencies {
        compile(
                project(":orange-core"),
                'org.quartz-scheduler:quartz:2.2.3',
                'org.quartz-scheduler:quartz-jobs:2.2.3'
        )
    }
}

configure(subprojects.findAll { !it.name.startsWith("orange-example") }) {

    apply plugin: "maven"
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
        // don't include or exclude anything explicitly by default. See SPR-12085.
    }
    artifacts {
        archives sourcesJar
    }

    publishing {
        publications {

            projectPublication(MavenPublication) {
                groupId getGroup()
                artifactId project.name
                version '0.1'

                from components.java

                artifact sourcesJar
            }
        }
    }

    bintray {
        user = property("bintrayUser")
        key = property("bintrayKey")
        publications = ['projectPublication']
        override = true
        pkg {
            repo = 'rika'
            name = project.name
            userOrg = property("bintrayUser")
            licenses = ['Apache-2.0']
            websiteUrl = 'https://github.com/ooeyuna/orange'
            issueTrackerUrl = 'https://github.com/ooeyuna/orange/issues'
            vcsUrl = 'https://github.com/ooeyuna/orange.git'
            publicDownloadNumbers = true
            version {
                name = "0.1"
                desc = "micro service for kotlin"
            }
        }
    }

}

configure(subprojects.findAll { it.name.startsWith("orange-example") }) {
    dependencies {
        compile(
                project(":orange-web")
        )
    }
    apply plugin: "application"
    mainClassName = "Main"
    applicationDefaultJvmArgs = ["-server"]

}
project(':orange-example-helloworld') {
}

project(':orange-example-web-with-exposed') {
    dependencies {
        compile(
                project(":orange-db"),
                "com.h2database:h2:1.4.192"
        )
    }
}